import { themes } from "@benny-eleventy/benny-ui";

export const finalVariant = {
	...themes,
	name: themes.colors[0].name,
	variant: themes.colors[0].variant,
	hue: themes.colors[0].hue,
	pureColor: themes.colors[0].color,
	"pureColor-0": themes.colors[0].color[0],
	"pureColor-100": themes.colors[0].color[100],
	"pureColor-200": themes.colors[0].color[200],
	"pureColor-300": themes.colors[0].color[300],
	"pureColor-400": themes.colors[0].color[400],
	"pureColor-500": themes.colors[0].color[500],
	"pureColor-600": themes.colors[0].color[600],
	"pureColor-700": themes.colors[0].color[700],
	"pureColor-800": themes.colors[0].color[800],
	color: themes.colors[0].hues,
	"color-0": themes.colors[0].hues[0],
	"color-100": themes.colors[0].hues[100],
	"color-200": themes.colors[0].hues[200],
	"color-300": themes.colors[0].hues[300],
	"color-400": themes.colors[0].hues[400],
	"color-500": themes.colors[0].hues[500],
	"color-600": themes.colors[0].hues[600],
	"color-700": themes.colors[0].hues[700],
	"color-800": themes.colors[0].hues[800],
	errorColor: themes.colors[0].appColor.error,
	successColor: themes.colors[0].appColor.success,
	warningColor: themes.colors[0].appColor.warning,
	black: themes.colors[0].appColor.black,
	white: themes.colors[0].appColor.white,
	gray0: themes.colors[0].appColor.gray[0],
	"gray-100": themes.colors[0].appColor.gray[100],
	"gray-800": themes.colors[0].appColor.gray[800],
	space: themes.constants.spaces,
	"s-xxsmall": themes.constants.spaces.xxsmall,
	"s-xsmall": themes.constants.spaces.xsmall,
	"s-small": themes.constants.spaces.small,
	"s-regular": themes.constants.spaces.regular,
	"s-large": themes.constants.spaces.large,
	"s-xlarge": themes.constants.spaces.xlarge,
	"s-xxlarge": themes.constants.spaces.xxlarge,
	"s-xxxlarge": themes.constants.spaces.xxxlarge,
	fontSize: themes.constants.typography.font,
	"fs-xxsmall": themes.constants.typography.size.xsmall,
	"fs-xsmall": themes.constants.typography.size.small,
	"fs-small": themes.constants.typography.size.regular,
	"fs-regular": themes.constants.typography.size.large,
	"fs-large": themes.constants.typography.size.xlarge,
	"fs-xlarge": themes.constants.typography.size.xxlarge,
	"fs-xxlarge": themes.constants.typography.size.xxxlarge,
	fontWeight: themes.constants.typography.weight,
	"fw-regular": themes.constants.typography.weight.regular,
	"fw-light": themes.constants.typography.weight.light,
	"fw-bold": themes.constants.typography.weight.bold,
	"fw-200": themes.constants.typography.weight.weight200,
	"fw-300": themes.constants.typography.weight.weight300,
	"fw-400": themes.constants.typography.weight.weight400,
	"fw-500": themes.constants.typography.weight.weight500,
	"fw-600": themes.constants.typography.weight.weight600,
	"fw-700": themes.constants.typography.weight.weight700,
	"fw-800": themes.constants.typography.weight.weight800,
	lineHeight: themes.constants.typography.lineHeight,
	"lh-small": themes.constants.typography.lineHeight.small,
	"lh-regular": themes.constants.typography.lineHeight.regular,
	"lh-large": themes.constants.typography.lineHeight.large,
	borderRadius: themes.constants.radii,
	"br-small": themes.constants.radii.small,
	"br-regular": themes.constants.radii.regular,
	"br-large": themes.constants.radii.large,
	"br-xlarge": themes.constants.radii.xlarge,
	"br-circle": themes.constants.radii.circle,
};
